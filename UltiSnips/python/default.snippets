priority -50

snippet #! "Shebang header for python scripts" b
#!/usr/bin/env python
# -*- coding: utf-8 -*-
$0
endsnippet

snippet '(\s+)(\S.+)\.if$' "" r
`!p snip.rv = match.group(1) + 'if ' + match.group(2)`:
	`!p snip.rv = match.group(1)`$0
endsnippet

snippet '(\s+)(\S.+)\.ife(|l|ls|lse)$' "" r
`!p snip.rv = match.group(1) + 'if ' + match.group(2)`:
	`!p snip.rv = match.group(1)`${1:pass}
`!p snip.rv = match.group(1)`else:
	`!p snip.rv = match.group(1)`${0:pass}
endsnippet

snippet init "__init__(self,):"
def __init__(self$1):
	${2:pass}
endsnippet

snippet selfinit "__init__(self,):"
def __init__(self$1):
	${2:pass}

snippet _str ""
def __str__(self):
	return self.${1}$0
endsnippet

snippet try
try:
	$0
except ${1:Exception}:
	pass
endsnippet

snippet testclass "A test class" b
class Test${1:Class}(TestCase):

	def test_$2(self):
		${3:pass}
endsnippet

snippet '^\s*(\S.+)\.test' "test template" r
def test`!p
import re
snip.rv = re.sub(r'(^\w|\s(\w))', lambda m: '_' + m.group(1).strip(), match.group(1))
`(self):
	pass
endsnippet

